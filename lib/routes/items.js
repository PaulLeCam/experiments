// Generated by CoffeeScript 1.4.0
var app, debug, express, items;

express = require("express");

debug = require("debug")("app:routes:items");

items = require("../repositories/mongo-items");

app = express();

app.param("id", function(req, res, next, id) {
  return items.getById({
    id: id
  }, function(err, resource) {
    if (err) {
      return res.send(500);
    } else if (resource) {
      req.resource = resource;
      return next();
    } else {
      return res.send(404);
    }
  });
});

app.get("/", function(req, res) {
  var query, _ref, _ref1;
  query = {
    limit: (_ref = req.query.limit) != null ? _ref : 20,
    start: (_ref1 = req.query.start) != null ? _ref1 : 0
  };
  return items.getAll(query, function(err, entities) {
    if (err) {
      debug(err);
      return res.send(500);
    } else {
      return res.json(entities);
    }
  });
});

app.get("/:id", function(req, res) {
  return res.json(req.resource);
});

app.post("/", function(req, res) {
  return items.createOne(req.body, function(err, entity) {
    if (err) {
      debug(err);
      return res.send(500);
    } else {
      return res.json(entity);
    }
  });
});

app.put("/:id", function(req, res) {
  return items.updateById(req.body, function(err, entity) {
    if (err) {
      debug(err);
      return res.send(500);
    } else {
      return res.json(entity);
    }
  });
});

app.del("/:id", function(req, res) {
  return items.deleteOne({
    _id: req.params.id
  }, function(err) {
    if (err) {
      debug(err);
      return res.send(500);
    } else {
      return res.send(200);
    }
  });
});

debug("defined");

module.exports = app;
